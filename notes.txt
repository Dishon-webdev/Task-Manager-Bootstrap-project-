<!-- NAVBAR

  ðŸ”¹ What is a Navbar?
      - A navigation bar (navbar) is a horizontal bar that contains links to different sections of a website.
      - Bootstrap provides built-in navbar classes for responsive navigation with ease.

  ðŸ”¹ Basic Navbar Structure:
      <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container">
          <a class="navbar-brand" href="#">Brand</a>
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
              <li class="nav-item">
                <a class="nav-link active" href="#">Home</a>
              </li>
              ...
            </ul>
          </div>
        </div>
      </nav>

  ðŸ”¹ Key Classes:
      - `.navbar`: Initializes the navbar component
      - `.navbar-expand-lg`: Makes the navbar responsive (collapses on smaller screens)
      - `.navbar-light` / `.navbar-dark`: Controls text color based on background
      - `.bg-light` / `.bg-dark` / `.bg-primary`: Sets background color
      - `.navbar-brand`: For branding or logo
      - `.navbar-nav`: Groups nav items (links)
      - `.nav-link`: Styles individual nav links
      - `.navbar-toggler`: Button for toggling collapse on small screens

  ðŸ§  Use Case:
    Use a navbar when you need to provide consistent, site-wide navigation that adapts to all screen sizes.

    âœ… Great for:
      - Website headers
      - Responsive menus
      - Branding + navigation in one bar
      - Collapsible menus for mobile

  ðŸ›  Tips:
    - Always wrap nav content inside a `.container` or `.container-fluid` for alignment.
    - Use icons or toggler buttons for better mobile experience.
    - You can place forms, buttons, or dropdowns inside navbars too!
-->


<!-- NAVBAR TOGGLER

  ðŸ”¹ What is a Navbar Toggler?
      - A button used to show or hide the collapsed menu in a responsive navbar.
      - Visible only on smaller screens (when navbar is collapsed).
      - Works with Bootstrap's collapse plugin.

  ðŸ”¹ Basic Toggler Structure:
      <button class="navbar-toggler" type="button" 
              data-bs-toggle="collapse" 
              data-bs-target="#navbarNav" 
              aria-controls="navbarNav" 
              aria-expanded="false" 
              aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>

  ðŸ”¹ Key Attributes:
      - `class="navbar-toggler"`: Styles the button as a toggler
      - `data-bs-toggle="collapse"`: Enables toggle functionality
      - `data-bs-target="#navbarNav"`: Points to the collapsible menu
      - `aria-controls`: Matches the ID of the collapsible div
      - `aria-expanded="false"`: Accessibility (default state is collapsed)
      - `aria-label`: Describes the button for screen readers

  ðŸ”¹ Toggler Icon:
      - `<span class="navbar-toggler-icon"></span>`: Displays the hamburger icon

  ðŸ§  Use Case:
    Use the navbar toggler in responsive navbars so the menu can collapse into a toggleable menu on small devices.

    âœ… Great for:
      - Mobile and tablet navigation
      - Saving space on smaller screens
      - Responsive UI

  ðŸ›  Tips:
    - The `data-bs-target` must match the `id` of the collapsible content div.
    - Works only when used inside `.navbar-expand-*` classes.
    - You can customize the toggler icon with your own SVG or icon if needed.

-->


<!-- BREADCRUMB

  ðŸ”¹ What is a Breadcrumb?
      - A breadcrumb is a navigation aid that shows the user's location within a website.
      - Displays a trail of links from the homepage to the current page.
      - Helps users easily navigate back to previous sections.

  ðŸ”¹ Basic Breadcrumb Structure:
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="#">Home</a></li>
          <li class="breadcrumb-item"><a href="#">Library</a></li>
          <li class="breadcrumb-item active" aria-current="page">Data</li>
        </ol>
      </nav>

  ðŸ”¹ Key Classes:
      - `.breadcrumb`: Applies breadcrumb styling to the ordered list
      - `.breadcrumb-item`: Styles individual items
      - `.active`: Indicates the current page (not a link)
      - `aria-current="page"`: Accessibility for active item

  ðŸ§  Use Case:
    Use breadcrumbs to improve navigation clarity, especially for multi-level pages or complex sites.

    âœ… Great for:
      - Dashboard navigation
      - Product/category hierarchies
      - Admin panels
      - Blog or article categories

  ðŸ›  Tips:
    - Breadcrumbs are **ordered lists** (`<ol>`), not unordered (`<ul>`)
    - Always wrap breadcrumbs inside `<nav>` for semantic HTML
    - Customize the divider using CSS if needed (default is "/")
      Example: `.breadcrumb-item + .breadcrumb-item::before { content: ">"; }`

-->


<!-- BUTTONS

  ðŸ”¹ What are Bootstrap Buttons?
      - Bootstrap provides pre-styled button classes for easy UI design.
      - Buttons can be used for actions like submit, links, toggles, and more.
      - Highly customizable using size, color, outline, and state classes.

  ðŸ”¹ Basic Button Structure:
      <button type="button" class="btn btn-primary">Click Me</button>

  ðŸ”¹ Key Classes:
      - `btn`: Required base class for all buttons
      - `btn-primary`: Applies a specific style (color)

  ðŸ”¹ Button Color Variants:
      - `btn-primary`: Blue (primary action)
      - `btn-secondary`: Gray
      - `btn-success`: Green (success message)
      - `btn-danger`: Red (delete, error)
      - `btn-warning`: Orange/Yellow (warnings)
      - `btn-info`: Light blue (info)
      - `btn-light`: Light gray
      - `btn-dark`: Black/Dark gray
      - `btn-link`: Looks like a hyperlink

  ðŸ”¹ Button Sizes:
      - `btn-lg`: Large button
      - `btn-sm`: Small button
      - (Default size: medium)

  ðŸ”¹ Outline Buttons:
      - `btn-outline-primary`, `btn-outline-success`, etc.
      - Transparent background with colored border

  ðŸ”¹ Disabled State:
      - Add `disabled` attribute (for `<button>`)
      - Or use `class="btn btn-primary disabled"` for links

  ðŸ”¹ Block Button (Full Width):
      - Use `d-grid` and `gap-2` on parent + `btn` inside
      Example:
        <div class="d-grid gap-2">
          <button class="btn btn-primary">Full Width</button>
        </div>

  ðŸ§  Use Case:
    Use Bootstrap buttons for any clickable action in a form, modal, alert, or webpage.

    âœ… Great for:
      - Forms (submit, reset)
      - Modals and alerts
      - Navigation buttons
      - CTAs (Call to Action)

  ðŸ›  Tips:
    - You can use `<a>` or `<button>` with `btn` class.
    - Combine with icons for better visuals.
    - Outline buttons are great for secondary actions.

-->


<!-- LIST GROUP

  ðŸ”¹ What is a List Group?
      - A flexible component used to display a series of content items in a list format.
      - Can be used for menus, notifications, messages, or grouped content.
      - Supports plain lists, linked lists, flush styles, and contextual colors.

  ðŸ”¹ Basic List Group Structure:
      <ul class="list-group">
        <li class="list-group-item">First item</li>
        <li class="list-group-item">Second item</li>
        <li class="list-group-item">Third item</li>
      </ul>

  ðŸ”¹ Key Classes:
      - `list-group`: Parent container class
      - `list-group-item`: Applied to each item

  ðŸ”¹ List Group with Links:
      <div class="list-group">
        <a href="#" class="list-group-item list-group-item-action active">Home</a>
        <a href="#" class="list-group-item list-group-item-action">Profile</a>
        <a href="#" class="list-group-item list-group-item-action">Messages</a>
      </div>

      - `list-group-item-action`: Adds hover and focus styles
      - `active`: Highlights the current item
      - `disabled`: Makes the item unclickable

  ðŸ”¹ Contextual Classes:
      - Add color to items using:
        - `list-group-item-primary`
        - `list-group-item-success`
        - `list-group-item-danger`
        - `list-group-item-warning`
        - `list-group-item-info`
        - `list-group-item-light`
        - `list-group-item-dark`

  ðŸ”¹ Flush List Group:
      - Removes borders and rounded corners
      - Use `list-group-flush` class with `<ul>` or `<div>`

      Example:
        <ul class="list-group list-group-flush">
          <li class="list-group-item">No borders</li>
        </ul>

  ðŸ§  Use Case:
    Use list groups to display grouped items in a clean vertical list.

    âœ… Great for:
      - Navigation menus
      - Notifications or inbox views
      - Sidebars
      - Data lists or summaries

  ðŸ›  Tips:
    - You can insert any HTML (headings, badges, buttons) inside list items.
    - Combine with modals or tabs for dynamic interfaces.
    - Works well inside cards or layout columns.

-->


<!-- BADGE

  ðŸ”¹ What is a Badge?
      - A small count or label used to highlight information.
      - Commonly used for notifications, statuses, or counts.
      - Can be placed inside buttons, links, headings, etc.

  ðŸ”¹ Basic Badge Structure:
      <span class="badge bg-primary">New</span>

  ðŸ”¹ Key Classes:
      - `badge`: Base badge style
      - `bg-*`: Sets background color (e.g., `bg-primary`, `bg-success`)
      - `text-bg-*`: Alternative utility to change both text & background

  ðŸ”¹ Example in Button:
      <button type="button" class="btn btn-primary">
        Messages <span class="badge bg-light text-dark">4</span>
      </button>

  ðŸ”¹ Pill Badges:
      - Rounded badges using `rounded-pill`
      Example:
        <span class="badge bg-success rounded-pill">99+</span>

  ðŸ”¹ Contextual Colors:
      - `bg-primary`
      - `bg-secondary`
      - `bg-success`
      - `bg-danger`
      - `bg-warning`
      - `bg-info`
      - `bg-light`
      - `bg-dark`

  ðŸ”¹ Placement Examples:
      - Inside headings:
        <h4>Inbox <span class="badge bg-danger">7</span></h4>
      - Inside nav items or buttons

  ðŸ§  Use Case:
    Use badges to draw attention to numbers or statuses (like unread messages, alerts, etc.)

    âœ… Great for:
      - Notifications
      - Labels
      - Status indicators
      - Product counts or tags

  ðŸ›  Tips:
    - Combine with flex utilities for layout
    - Use `position-relative` and `position-absolute` for overlays
    - Avoid using only color â€” add icons or text for accessibility

-->


<!-- MODAL

  ðŸ”¹ What is a Modal?
      - A dialog box/popup window displayed on top of the current page.
      - Used for alerts, forms, confirmations, or additional info.
      - Requires JavaScript to function properly.

  ðŸ”¹ Basic Modal Structure:
      <div class="modal fade" id="exampleModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Modal Title</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              Modal body content goes here.
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary">Save changes</button>
            </div>
          </div>
        </div>
      </div>

  ðŸ”¹ Trigger Button:
      <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
        Launch Modal
      </button>

  ðŸ”¹ Key Classes:
      - `modal`: Main modal wrapper
      - `modal-dialog`: Box wrapper
      - `modal-content`: Main content box
      - `modal-header`, `modal-body`, `modal-footer`: Section dividers
      - `btn-close`: Close (Ã—) button
      - `fade`: Adds fade transition

  ðŸ”¹ Custom Sizes:
      - `.modal-sm` â†’ Small modal
      - `.modal-lg` â†’ Large modal
      - `.modal-xl` â†’ Extra large modal
      Example: 
        <div class="modal-dialog modal-lg">

  ðŸ”¹ Centering:
      - Use `.modal-dialog-centered` to center vertically

  ðŸ”¹ Scrollable Body:
      - Use `.modal-dialog-scrollable` to make body scrollable

  ðŸ§  Use Case:
    Use modals to present user actions without navigating away from the page.

    âœ… Great for:
      - Login/Sign-up forms
      - Alerts/Confirmations
      - Displaying large content without page reload

  ðŸ›  Tips:
    - Always give modals an `id` for targeting
    - Use `data-bs-dismiss="modal"` to close via buttons
    - Don't overuse â€” can be intrusive to UX

-->


<!-- DROPDOWN

  ðŸ”¹ What is a Dropdown?
      - A toggleable menu that allows the user to choose one or more options.
      - Often used in navigation bars, forms, or buttons.

  ðŸ”¹ Basic Dropdown Structure:
      <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
          Dropdown button
        </button>
        <ul class="dropdown-menu">
          <li><a class="dropdown-item" href="#">Action</a></li>
          <li><a class="dropdown-item" href="#">Another action</a></li>
          <li><a class="dropdown-item" href="#">Something else</a></li>
        </ul>
      </div>

  ðŸ”¹ Key Classes:
      - `dropdown`: Wrapper for the dropdown
      - `dropdown-toggle`: Toggles dropdown visibility
      - `dropdown-menu`: Contains the dropdown items
      - `dropdown-item`: Styles individual items

  ðŸ”¹ Alignment:
      - Default: aligned to left
      - Add `.dropdown-menu-end` to align right:
        <ul class="dropdown-menu dropdown-menu-end">

  ðŸ”¹ Dropdown Inside Nav:
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
          Menu
        </a>
        <ul class="dropdown-menu">
          <li><a class="dropdown-item" href="#">Profile</a></li>
        </ul>
      </li>

  ðŸ”¹ Dropdown Divider:
      - Add a line between items using:
        <li><hr class="dropdown-divider"></li>

  ðŸ”¹ Dropdown Header:
      - Add non-clickable label using:
        <li><h6 class="dropdown-header">Header</h6></li>

  ðŸ§  Use Case:
    Use dropdowns to organize related links or options without cluttering the UI.

    âœ… Great for:
      - Navigation bars
      - Account or settings menus
      - Actions under one button (e.g., Export, Share)

  ðŸ›  Tips:
    - Works with buttons or links
    - Use Bootstrap JS or CDN for proper toggle behavior
    - Avoid nesting dropdowns too deeply (complex UX)

-->


<!-- NAV & TABS

  ðŸ”¹ What is Nav?
      - A flexible navigation component for links, tabs, and pills.
      - Commonly used for menus, tabbed content, or switching views.

  ðŸ”¹ Basic Nav Structure:
      <ul class="nav">
        <li class="nav-item">
          <a class="nav-link active" href="#">Home</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Profile</a>
        </li>
      </ul>

  ðŸ”¹ Types of Nav:
      - Tabs: <ul class="nav nav-tabs">
      - Pills: <ul class="nav nav-pills">

  ðŸ”¹ Fill & Justify:
      - `.nav-fill`: Equal-width items filling container
      - `.nav-justified`: Justify items to full width

  ðŸ”¹ Vertical Nav:
      - Add `.flex-column` to make nav vertical
        Example:
          <ul class="nav flex-column">

  ðŸ”¹ Disabled & Active Links:
      - `.active`: Highlights the active link
      - `.disabled`: Makes a link unclickable

  ðŸ”¹ Tabs with Content:
      <!-- Nav tabs -->
      <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item">
          <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#home-tab" type="button">Home</button>
        </li>
        <li class="nav-item">
          <button class="nav-link" data-bs-toggle="tab" data-bs-target="#profile-tab" type="button">Profile</button>
        </li>
      </ul>

      <!-- Tab content -->
      <div class="tab-content">
        <div class="tab-pane fade show active" id="home-tab">
          Home tab content...
        </div>
        <div class="tab-pane fade" id="profile-tab">
          Profile tab content...
        </div>
      </div>

  ðŸ”¹ Key Classes:
      - `nav`, `nav-item`, `nav-link`: Basic nav components
      - `nav-tabs`: Makes links look like tabs
      - `nav-pills`: Gives pill-style buttons
      - `tab-content`, `tab-pane`: Wraps the content
      - `fade`, `show`, `active`: Controls transitions and visibility

  ðŸ§  Use Case:
    Use navs and tabs to navigate between sections or switch content views without reloading the page.

    âœ… Great for:
      - Tabbed interfaces
      - Vertical menus
      - Dashboard layouts

  ðŸ›  Tips:
    - Use `data-bs-toggle="tab"` for tab functionality
    - Use `aria-controls`, `aria-selected`, and roles for accessibility
    - Add transitions with `.fade`

-->


<!-- PAGINATION

  ðŸ”¹ What is Pagination?
      - A navigation component to split content across multiple pages.
      - Helps users move through large sets of items (e.g., blog posts, products).

  ðŸ”¹ Basic Pagination Structure:
      <nav>
        <ul class="pagination">
          <li class="page-item"><a class="page-link" href="#">Previous</a></li>
          <li class="page-item"><a class="page-link" href="#">1</a></li>
          <li class="page-item"><a class="page-link" href="#">2</a></li>
          <li class="page-item"><a class="page-link" href="#">3</a></li>
          <li class="page-item"><a class="page-link" href="#">Next</a></li>
        </ul>
      </nav>

  ðŸ”¹ Key Classes:
      - `pagination`: Main wrapper
      - `page-item`: Each page number or control
      - `page-link`: Styled anchor inside page-item

  ðŸ”¹ Active & Disabled States:
      - Active Page:
          <li class="page-item active"><a class="page-link" href="#">2</a></li>
      - Disabled Button:
          <li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>

  ðŸ”¹ Sizing Options:
      - Small: `.pagination-sm`
      - Large: `.pagination-lg`
        Example:
          <ul class="pagination pagination-lg">

  ðŸ”¹ Alignment:
      - Center: `<ul class="pagination justify-content-center">`
      - Right: `<ul class="pagination justify-content-end">`

  ðŸ”¹ Icons (using &laquo; and &raquo;):
      <li class="page-item">
        <a class="page-link" href="#" aria-label="Previous">
          <span aria-hidden="true">&laquo;</span>
        </a>
      </li>

  ðŸ§  Use Case:
    Use pagination to improve user experience when dealing with many items across multiple pages.

    âœ… Great for:
      - Blog/article navigation
      - Product listing
      - Table or data view pages

  ðŸ›  Tips:
    - Use `aria-label` and screen reader text (`<span class="visually-hidden">`) for accessibility
    - Combine with server-side or JavaScript logic for dynamic page changes

-->


<!-- TOOLTIP

  ðŸ”¹ What is a Tooltip?
      - A small popup box that appears when a user hovers over or focuses on an element.
      - Provides additional information without cluttering the UI.

  ðŸ”¹ Basic Tooltip Usage:
      <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" title="Tooltip text">
        Hover me
      </button>

  ðŸ”¹ Enable Tooltips (required!):
      - You must initialize tooltips using JavaScript:
        <script>
          const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
          const tooltipList = [...tooltipTriggerList].map(el => new bootstrap.Tooltip(el));
        </script>

  ðŸ”¹ Placement Options:
      - Top (default): `data-bs-placement="top"`
      - Bottom: `data-bs-placement="bottom"`
      - Left: `data-bs-placement="left"`
      - Right: `data-bs-placement="right"`

      Example:
        <button data-bs-toggle="tooltip" data-bs-placement="right" title="Tooltip on right">Right</button>

  ðŸ”¹ Tooltip with HTML:
      <button data-bs-toggle="tooltip" data-bs-html="true" title="<em>Custom</em> <u>HTML</u>">HTML Tooltip</button>

  ðŸ”¹ Key Attributes:
      - `data-bs-toggle="tooltip"`: Activates tooltip
      - `title`: Text shown in tooltip
      - `data-bs-placement`: Direction
      - `data-bs-html="true"`: Allows HTML inside tooltip

  ðŸ§  Use Case:
    Use tooltips to give users hints, labels, or extra context without cluttering the UI.

    âœ… Great for:
      - Describing icons
      - Giving hints for buttons
      - Short labels for form fields

  ðŸ›  Tips:
    - Must include Bootstrapâ€™s JS bundle for tooltips to work
    - Tooltips wonâ€™t appear unless initialized with JavaScript
    - Avoid long text â€” keep tooltips short and clear

-->


<!-- POPOVER

  ðŸ”¹ What is a Popover?
      - A popup box that appears when clicking or focusing on an element.
      - Similar to a tooltip, but can contain more content like titles and paragraphs.

  ðŸ”¹ Basic Popover Usage:
      <button type="button" class="btn btn-primary" 
        data-bs-toggle="popover" 
        title="Popover Title" 
        data-bs-content="This is the popover content.">
        Click me
      </button>

  ðŸ”¹ Enable Popovers (required!):
      - Popovers must be initialized with JavaScript:
        <script>
          const popoverTriggerList = document.querySelectorAll('[data-bs-toggle="popover"]');
          const popoverList = [...popoverTriggerList].map(el => new bootstrap.Popover(el));
        </script>

  ðŸ”¹ Placement Options:
      - Top (default): `data-bs-placement="top"`
      - Bottom: `data-bs-placement="bottom"`
      - Left: `data-bs-placement="left"`
      - Right: `data-bs-placement="right`

      Example:
        <button data-bs-toggle="popover" data-bs-placement="bottom" title="Note" data-bs-content="Info here.">
          Bottom Popover
        </button>

  ðŸ”¹ Trigger Types:
      - Default: `click`
      - Others: `hover`, `focus`, `manual`
      - Use: `data-bs-trigger="hover focus"`

      Example:
        <button data-bs-toggle="popover" data-bs-trigger="hover" ...>Hover Me</button>

  ðŸ”¹ HTML Content in Popover:
      - Use `data-bs-html="true"` to allow HTML inside:
        <button data-bs-toggle="popover" data-bs-html="true" data-bs-content="<b>Bold</b> content">HTML</button>

  ðŸ”¹ Key Attributes:
      - `data-bs-toggle="popover"`: Enables popover
      - `data-bs-content`: Content inside
      - `title`: Title of the popover
      - `data-bs-placement`: Position
      - `data-bs-trigger`: How it opens (click, hover, focus)

  ðŸ§  Use Case:
    Use popovers when you need more space than a tooltip for showing short instructions, hints, or contextual help.

    âœ… Great for:
      - Form field help
      - Descriptive tips
      - Instructions on buttons or icons

  ðŸ›  Tips:
    - You **must include Bootstrapâ€™s JS** to make it work
    - Use popovers sparingly â€” they can cover UI elements
    - Prefer tooltips for single-line hints, popovers for more detailed content

-->
